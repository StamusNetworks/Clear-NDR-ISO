---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: scirius-rules-refresh
  namespace: suricata
  labels:
    k8s-app: scirius-rules-refresh

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: scirius-rules-refresh
  namespace: suricata
  labels:
    k8s-app: scirius-rules-refresh
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  verbs:
  - '*'

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: scirius-rules-refresh
  namespace: suricata
roleRef:
  kind: Role
  name: scirius-rules-refresh
  apiGroup: ""
subjects:
- kind: ServiceAccount
  name: scirius-rules-refresh
  namespace: suricata

---

apiVersion: batch/v1
kind: CronJob
metadata:
  name: scirius-rules-refresh
  namespace: suricata
  labels:
    k8s-app: scirius-rules-refresh
spec:
  # Run every day at 13:13
  schedule: "13 13 * * *"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: scirius-rules-refresh
          containers:
          - name: scirius-rules-refresh
            image: "bitnami/kubectl:latest"
            imagePullPolicy: Always
            command: ["bash","-c"]
            args:
            - |
              echo "Updating Suricata rules from Scirius"
              kubectl exec -n suricata $(kubectl get pod -n suricata -l app=scirius -o custom-columns=Name:.metadata.name --no-headers) -- python /opt/scirius/manage.py updatesuricata && echo "done." || (echo "ERROR" && exit 1)

            resources:
              requests:
                memory: 10Mi
                cpu: 5m

            securityContext:
              runAsUser: 1001
              runAsGroup: 1001

          securityContext:
            fsGroup: 1001

          restartPolicy: Never
