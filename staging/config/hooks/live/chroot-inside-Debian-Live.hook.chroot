#!/bin/bash

# Copyright Stamus Networks, 2025
# All rights reserved
# Debian Live/Install ISO script - oss@stamus-networks.com
#
# Please run on Debian Bookworm

set -ex

# Setting up the LIVE root (during install on disk it is preseeded)
echo "root:StamusNetworks" | chpasswd

# Enable color output and the "ll" command in shell 
echo " export LS_OPTIONS='--color=auto'" >> /root/.bashrc
echo " alias ll='ls $LS_OPTIONS -l'" >> /root/.bashrc


# Set up the host name
echo "Clear NDR Community" > /etc/hostname

# Enable the ssh banners
sed -i -e 's|\#Banner \/etc\/issue\.net|Banner \/etc\/issue\.net|'  /etc/ssh/sshd_config

# Edit the Icon "Install Debian Bookworm" name on a Live Desktop 
# to "Install Clear NDR Community"
sed -i -e 's|Name\=Install Debian sid|Name\=Install Clear NDR Community|'  /usr/share/applications/debian-installer-launcher.desktop 

# First time setup

cat >> /etc/skel/Desktop/FirstTimeSetup.txt <<EOF

It is always recommended to follow the latest docs:        
https://docs.clearndr.io/docs/intro

Please go to the end of the brief below for production setup considerations.

Minimum requirements: 2 CPUs, 8GB RAM, 50GB disk

First time setup:   

Non interactive, airgapped mode will be automatically detected and the config used accordingly for setup.
The below command will setup the Clear NDR Community installation:
- in non-interactive mode
- install all containers without pulling anything from the internet
- use the interface eno1 as sniffing interface
- use 8GB of RAM for Opensearch
- start up the installation (docker compose)

Examples:   

cd /opt/ClearNDRCommunity/ && \\
sudo ./stamusctl compose init suricata.interfaces=eno1 && \\
sudo ./stamusctl compose up -d

stamusctl config set --apply opensearch.memory=8G

Interactive with latest updated containers and software:

- update all containers 
- use the interface tppdummy0 as sniffing interface
- use 8GB of RAM for Opensearch,
- start up the installation 

Example:  

cd /opt/ClearNDRCommunity/
sudo ./stamusctl compose update
sudo ./tamusctl compose up -d
sudo ./stamusctl config set --apply opensearch.memory=8G


Setting up dummy interface       
If you would not want to sniff on specific system interface and want to set up a dummy interface for sniffing to replay for example specific pcap cases:

Example:   

sudo ip link add tppdummy0 type dummy && \\
sudo ip link set tppdummy0 up && \\
sudo ifconfig tppdummy0 mtu 1572

Production setup considerations:
https://docs.clearndr.io/docs/guides/run-in-production

EOF

# copy for root to
cp /etc/skel/Desktop/FirstTimeSetup.txt /root/Desktop/

# Clean devel and some others packages
apt-get -y remove bison  autoconf automake libc6-dev autotools-dev libpcap-dev libnet1-dev libcap-ng-dev \
	libnetfilter-queue-dev  libnss3-dev libnspr4-dev \
	xscreensaver xscreensaver-data manpages-dev libjansson-dev \
	ghostscript x11proto-core-dev linux-libc-dev \
	rpm alien sane-utils libsane rpm2cpio \
	libx11-dev libx11-doc m4 nginx nginx-common

apt-get purge -y --autoremove libreoffice-common

ip link add tppdummy0 type dummy && \
ip link set tppdummy0 up && \
ifconfig tppdummy0 mtu 1572 

mkdir -p /opt/ClearNDRCommunity/

cd /opt/ClearNDRCommunity/ && \
wget https://dl.clearndr.io/stamusctl-linux-amd64 && chmod +x ./stamusctl-linux-amd64 && mv ./stamusctl-linux-amd64 stamusctl && \
uname -a && whoami && echo $UID 

mkdir -p /opt/ClearNDRCommunity/docker/tar_images

#echo "export PATH=\"\/opt\/ClearNDRCommunity\/\:\$PATH\"">>/home/clearndr/.bashrc

#export PATH="/Directory1:$PATH"
apt update && apt-get install -y python3-requests


touch /opt/ClearNDRCommunity/docker/firstboot.cndrc

cat >> /etc/systemd/system/clearndrc-firstboot.service <<EOF
[Unit]
Description=ClearNDR Community startup script
#After=network.target  # Depends on network being up
After=multi-user.target  # Depends on runlevel 2

[Service]
Type=oneshot
ExecStart=/opt/ClearNDRCommunity/docker/firstboot.sh
RemainAfterExit=no  # Keep the service active after the script finishes

[Install]
WantedBy=multi-user.target
EOF

/bin/systemctl enable clearndrc-firstboot.service

apt-get autoremove -y
apt-get clean && \
cat /dev/null > ~/.bash_history && history -c

